@inject MoverAndStore.WebApp.Models.IClaimHelper ClaimHelper
@using MoverAndStore.WebApp.MvcExtensions
<!DOCTYPE html>
<html lang="en">


<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimal-ui">
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    <title>@ViewData["Title"] - MoverAndStore.WebApp</title>

    <!-- Favicon icon -->
    <link rel="icon" href="~/images/m.jpg" type="image/x-icon">
    <!-- fontawesome icon -->
    <link rel="stylesheet" href="~/fonts/fontawesome/css/fontawesome-all.min.css">
    <!-- animation css -->
    <link rel="stylesheet" href="~/plugins/animation/css/animate.min.css">
    <!-- notification css -->
    <link rel="stylesheet" href="~/plugins/notification/css/notification.min.css">
    <link rel="stylesheet" href="~/plugins/data-tables/css/datatables.min.css">
    <link rel="stylesheet" href="~/plugins/data-tables/css/fixedColumns.bootstrap5.min.css">
    <link rel="stylesheet" href="~/plugins/select2/css/select2.min.css">

    <!-- vendor css -->
    <link href="~/lib/handsontable/handsontable.full.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/style.css?v=@(DateTime.Now.ToString("dd-MM-yyyy"))">

    @await RenderSectionAsync("CSS", required: false)

    <style>
        a.navbar-brand {
            white-space: normal;
            text-align: center;
            word-break: break-all;
        }

        a {
            color: #901F17;
        }

        .btn-primary {
            color: #fff !important;
            background-color: #901F17 !important;
            border-color: #901F17 !important;
        }

        .nav-pills .nav-link.active, .nav-pills .show > .nav-link {
            color: #fff;
            background-color: #901F17;
            border-color: #901F17;
        }

        .border-top {
            border-top: 1px solid #e5e5e5;
        }

        .border-bottom {
            border-bottom: 1px solid #e5e5e5;
        }

        .box-shadow {
            box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);
        }

        button.accept-policy {
            font-size: 1rem;
            line-height: inherit;
        }

        .footer {
            position: absolute;
            bottom: 0;
            width: 100%;
            white-space: nowrap;
            line-height: 60px;
        }

        .dropdown-item {
            padding: 0.25rem 1rem !important;
        }

        div.dataTables_filter input[type=search],
        div.dataTables_length select {
            height: auto !important;
            padding: 5px !important;
        }

        .dataTable > thead > tr > th[class*="sort"]:before,
        .dataTable > thead > tr > th[class*="sort"]:after {
            content: "" !important;
        }

        .global-loader-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(128, 128, 128, 0.5);
            z-index: 9999;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .global-loader {
            display: inline-block;
            position: fixed;
            width: 15%;
            height: 15%;
            z-index: 10000;
            background-repeat: no-repeat;
            background-size: 100% 100%;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'%3E%3Cpath fill='white' d='M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm0,20a9,9,0,1,1,9-9A9,9,0,0,1,12,21Z'/%3E%3Crect width='2' height='7' x='11' y='6' fill='white' rx='1'%3E%3CanimateTransform attributeName='transform' dur='9s' repeatCount='indefinite' type='rotate' values='0 12 12;360 12 12'/%3E%3C/rect%3E%3Crect width='2' height='9' x='11' y='11' fill='white' rx='1'%3E%3CanimateTransform attributeName='transform' dur='0.75s' repeatCount='indefinite' type='rotate' values='0 12 12;360 12 12'/%3E%3C/rect%3E%3C/svg%3E");
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .custome-error {
            font-size: 80%;
        }

        .invalid-feedback {
            margin: 0px;
        }
    </style>
</head>
<body>
    <nav class="pcoded-navbar navbar-collapsed">
        <div class="navbar-wrapper">
            <div class="navbar-brand header-logo" style="background: #ffffff !important;height: 70px !important;">
                <a href="/Home">
                    <img src="/images/LogoMSBV.png" style="width: 92%;" class="float-left">
                </a>
               <a class="mobile-menu" id="mobile-collapse" href="#!"><span></span></a>
            </div>
            <div class="navbar-content scroll-div">
                <ul class="nav pcoded-inner-navbar">
                    <li class="nav-item @Html.ActiveMenu("Home")">
                        <a href="/Home/Index" class="nav-link">
                            <span class="pcoded-micon">
                                <i class="feather icon-home"></i>
                            </span>
                            <span class="pcoded-mtext">Dashboard</span>
                        </a>
                    </li>
                    @if (@ClaimHelper.Role == "Admin")
                    {
                        <li data-username="users" class="nav-item @Html.ActiveMenu("Users")">
                            <a href="@Url.Action("Index", "Users")" class="nav-link">
                                <span class="pcoded-micon">
                                    <i class="feather icon-users"></i>
                                </span>
                                <span class="pcoded-mtext">Users</span>
                            </a>
                        </li>
                        <li data-username="settings" class="nav-item @Html.ActiveMenu("Settings")">
                            <a href="@Url.Action("Index", "Settings")" class="nav-link">
                                <span class="pcoded-micon">
                                    <i class="feather icon-settings"></i>
                                </span>
                                <span class="pcoded-mtext">Settings</span>
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>
    <header class="navbar pcoded-header navbar-expand-lg navbar-light">
        <div class="m-header">
            <a class="mobile-menu" id="mobile-collapse1" href="#!"><span></span></a>
            <a href="/Home">
                <img src="/images/LogoMSBV.png" style="width: 60%;margin-left: 3.5rem !important;width: 50%;" class="float-left ml-4">
            </a>
        </div>
        <a class="mobile-menu" id="mobile-header" href="#!">
            <i class="feather icon-more-horizontal"></i>
        </a>

        <div class="collapse navbar-collapse bg-white">
            <ul class="navbar-nav ml-auto d-flex align-items-center">
                <li class="nav-item pr-3">
                    <img src="~/images/avatar-2.jpg" class="img-radius" alt="User-Profile-Image" style="width: 30px; height: 30px;">
                    <span class="text-dark font-weight-bold">Welcome, @ClaimHelper.Name</span>
                </li>
                <li class="nav-item">
                    <a href="~/Account/Logout" class="dud-logout Logout" title="Logout">
                        <i class="feather icon-log-out"></i>
                    </a>
                </li>

                @if (@ClaimHelper.Role == "Foreman")
                {
                    <li class="nav-item">
                        <div class="dropdown drp-user">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                <i class="icon feather icon-settings"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right profile-notification">
                                <ul class="pro-body">
                                    <li style="line-height: 2.2;">
                                        <a href="#!" class="dropdown-item" data-toggle="modal" data-target="#changePasswordModal">
                                            <i class="fas fa-key"></i> Change Password
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        </div>

    </header>
    <div class="global-loader-overlay d-none">
        <div class="global-loader"></div>
    </div>
    <div class="pcoded-main-container">
        <div class="pcoded-wrapper">
            <div class="pcoded-content">
                <div class="pcoded-inner-content">
                    @RenderBody()
                </div>
            </div>
        </div>
    </div>



    <!--Change Password Modal -->
    <div class="modal fade" id="changePasswordModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="userProfileModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-md" style="min-width: 25%; max-width: 28%;" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="userProfileModalLabel">Change Password</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="cursor: pointer;">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form class="frm-reset-password">
                        <div class="form-group">
                            <label for="recipient-name" class="col-form-label">Old Password <span class="text-danger">*</span></label>
                            <input type="password" class="form-control" id="oldPassword" name="oldPassword" autocomplete="off">
                        </div>
                        <div class="form-group">
                            <label for="recipient-name" class="col-form-label">New Password <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="newPassword" name="newPassword" onkeyup="ValidateChangePasswordForm();" autocomplete="off" maxlength="8">
                        </div>
                        <div class="form-group">
                            <label for="message-text" class="col-form-label">Confirm Password <span class="text-danger">*</span></label>
                            <input type="password" class="form-control" id="confirmPassword" onkeyup="ValidateChangePasswordForm();" name="confirmPassword" autocomplete="off" ,maxlength="8">
                        </div>
                    </form>
                    <div class="alert" role="alert" id="alert-password-save"></div>
                </div>
                <div class="modal-footer position-relative">
                    <div class="progress-bg" style="display:none">
                        <div class="progress-track">
                            <div class="progress-fill"></div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" id="btn-reset-password" style="cursor: pointer;"> Save</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" style="cursor: pointer;">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.3/xlsx.full.min.js"></script>

    <script src="~/js/vendor-all.min.js"></script>
    <script src="~/plugins/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/js/pcoded.min.js"></script>

    <script src="~/lib/handsontable/handsontable.full.min.js"></script>
    <script src="~/lib/handsontable/handsontable.min.js"></script>

    @* <script src="~/lib/handsontable/jquery-3.6.0.min.js"></script> *@
    <script src="~/plugins/data-tables/js/datatables.min.js"></script>
    <script src="~/plugins/data-tables/js/dataTables.fixedColumns.min.js"></script>
    <script src="~/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/js/sweetalert2@11.js"></script>
    <script src="~/js/common.js"></script>
    <script src="~/plugins/fullcalendar/js/lib/moment.min.js"></script>
    @await RenderSectionAsync("Scripts", required: false)



    <script type="text/javascript">

        $('#changePasswordModal').on('hidden.bs.modal', function () {
            $("#alert-password-save").addClass("d-none");
            $('.frm-reset-password')[0].reset();
            $('.frm-reset-password').validate().resetForm();
            $('.form-group').removeClass('has-error');
        });

        function ValidateChangePasswordForm() {
            $('[data-toggle="popover"]').popover();
            jQuery.validator.addMethod("exactLength", function (value, element, length) {
                return value.length === length;
            });

            jQuery.validator.addMethod("passwordPattern", function (value, element) {
                var hasUppercase = /[A-Z]/.test(value);
                var hasLowercase = /[a-z]/.test(value);
                var hasDigit = /\d/.test(value);
                var hasSpecialCharacter = /[@@#$*]/.test(value);

                if (!hasUppercase) {
                    $.validator.messages.passwordPattern = "Password must contain at least one uppercase letter.";
                    return false;
                }

                if (!hasLowercase) {
                    $.validator.messages.passwordPattern = "Password must contain at least one lowercase letter.";
                    return false;
                }

                if (!hasDigit) {
                    $.validator.messages.passwordPattern = "Password must contain at least one numeric digit.";
                    return false;
                }

                if (!hasSpecialCharacter) {
                    $.validator.messages.passwordPattern = "Password must contain at least one special character.";
                    return false;
                }

                return true;
            }, "Invalid password format");

            resetPasswordValidate();
            $("#reset-password-alert").hide();
        }

        function resetPasswordValidate() {
            $('.frm-reset-password').validate({
                ignore: '.ignore, .select2-input',
                focusInvalid: false,
                rules: {
                    'oldPassword': {
                        required: true
                    },
                    'newPassword': {
                        required: true,
                        passwordPattern: true
                    },
                    'confirmPassword': {
                        required: true,
                        equalTo: "#newPassword"
                    },
                },
                messages: {
                    'oldPassword': {
                        required: "This field is required."
                    },
                    'newPassword': {
                        required: "This field is required."
                    },
                    'confirmPassword': {
                        required: 'This field is required.',
                        equalTo: 'Password not matching'
                    },
                },
                errorPlacement: function errorPlacement(error, element) {
                    var $parent = $(element).parents('.form-group');
                    if ($parent.find('.jquery-validation-error').length) {
                        return;
                    }
                    $parent.append(
                        error.addClass('jquery-validation-error small form-text invalid-feedback')
                    );
                },
                highlight: function (element) {
                    var $el = $(element);
                    var $parent = $el.parents('.form-group');
                    $el.addClass('is-invalid');
                    if ($el.hasClass('select2-hidden-accessible') || $el.attr('data-role') === 'tagsinput') {
                        $el.parent().addClass('is-invalid');
                    }
                },
                unhighlight: function (element) {
                    $(element).parents('.form-group').find('.is-invalid').removeClass('is-invalid');
                }
            });
        }

        $('#btn-reset-password').on('click', function () {
            resetPasswordValidate();
            $("#alert-password-save").hide();
            var status = $(".frm-reset-password").valid();

            if (status == false) {
                return status;
            }
            var oldPassword = $("#oldPassword").val();
            var newPassword = $("#newPassword").val();

            makeButtonProgress('#btn-reset-password', 'Please wait...');

            $("#reset-password-alert").hide();
            $(".popover").hide();
            $(".progress-bg").show();
            $.ajax({
                url: "/Account/ChangePassword",
                cache: false,
                type: "POST",
                data: {
                    oldPassword: oldPassword,
                    newPassword: newPassword
                },
                dataType: "JSON",
                success: function (response) {
                    $(".progress-bg").hide();
                    makeButtonOriginal('#btn-reset-password', ' Save');
                    if (response.message == 'success') {
                        $("#alert-password-save").removeClass('alert-danger');
                        notifySuccess('#alert-password-save', 'alert-success', 'Password change successfully.');

                        setTimeout(function () {
                            $("#changePasswordModal").modal('hide');
                            $("#alert-password-save").hide();
                        }, 1500);

                        $(".frm-reset-password")[0].reset();
                    }
                    else {
                        $("#reset-password-alert").removeClass('alert-success');
                        $("#alert-password-save").removeClass('d-none');
                        makeButtonOriginal('#btn-reset-password', ' Save');
                        notifyError('#alert-password-save', 'alert-danger', response.message);

                        setTimeout(function () {
                            $("#changePasswordModal").modal('hide');
                            $("#alert-password-save").hide();
                        }, 3000);
                    }
                },
                error: function (err) {
                    $(".progress-bg").hide();
                    makeButtonOriginal('#btn-reset-password', ' Save');
                    $("#reset-password-alert").removeClass('alert-success');
                    notifyError('#alert-password-save', 'alert-danger', err.responseText);

                    setTimeout(function () {
                        $("#changePasswordModal").modal('hide');
                        $("#alert-password-save").hide();
                    }, 3000);
                }
            });
        });

    </script>

</body>
</html>